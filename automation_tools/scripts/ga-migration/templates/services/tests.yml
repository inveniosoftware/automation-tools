# -*- coding: utf-8 -*-
#
# This file is part of Invenio.
# Copyright (C) 2020 CERN.
#
# Invenio is free software; you can redistribute it and/or modify it
# under the terms of the MIT License; see LICENSE file for more details.

name: CI

on:
  push:
    branches: master
  pull_request:
    branches: master
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 3 * * 6'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason'
        required: false
        default: 'Manual trigger'

jobs:
  Tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
          python-version: [3.6, 3.7, 3.8, 3.9]
          requirements-level: [min, pypi]
          {%- if cache %}
          cache-service: [redis]
          {%- endif %}
          {%- if db %}
          db-service: [postgresql9, postgresql11, mysql5, mysql8]
          {%- endif %}
          {%- if mq %}
          mq-service: [rabbitmq, redis]
          {%- endif %}
          {%- if search %}
          search-service: [elasticsearch6, elasticsearch7]
          {%- endif %}
          exclude:
          - python-version: 3.8
            requirements-level: min

          - python-version: 3.9
            requirements-level: min

          {%- if db %}

          - db-service: postgresql11
            python-version: 3.6

          - db-service: mysql8
            python-version: 3.6
          {%- endif %}

          {%- if search %}

          - search-service: elasticsearch7
            python-version: 3.6
          {%- endif %}

          {%- if search and db %}

          - search-service: elasticsearch6
            db-service: postgresql11

          - search-service: elasticsearch6
            db-service: mysql8

          - search-service: elasticsearch7
            db-service: postgresql9

          - search-service: elasticsearch7
            db-service: mysql5
          {%- endif %}

          {%- if db or search %}
          include:
          {%- endif %}
          {%- if db %}
          - db-service: postgresql9
            DB_EXTRAS: "postgresql"

          - db-service: postgresql11
            DB_EXTRAS: "postgresql"

          - db-service: mysql5
            DB_EXTRAS: "mysql"

          - db-service: mysql8
            DB_EXTRAS: "mysql"
          {%- endif %}

          {%- if search %}

          - search-service: elasticsearch6
            SEARCH_EXTRAS: "elasticsearch6"

          - search-service: elasticsearch7
            SEARCH_EXTRAS: "elasticsearch7"
          {%- endif %}

    env:
      {%- if cache %}
      CACHE: {% raw %}${{ matrix.cache-service }}{% endraw %}
      {%- endif %}
      {%- if db %}
      DB: {% raw %}${{ matrix.db-service }}{% endraw %}
      {%- endif %}
      {%- if mq %}
      MQ: {% raw %}${{ matrix.mq-service }}{% endraw %}
      {%- endif %}
      {%- if search %}
      SEARCH: {% raw %}${{ matrix.search-service }}{% endraw %}
      {%- endif %}
      EXTRAS: all{% if db %}{% raw %},${{ matrix.DB_EXTRAS }}{% endraw %}{% endif %}{% if search %}{% raw %},${{ matrix.SEARCH_EXTRAS }}{% endraw %}{% endif %}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
{% raw %}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Generate dependencies
        run: |
          python -m pip install --upgrade pip setuptools py wheel requirements-builder
          requirements-builder -e "$EXTRAS" --level=${{ matrix.requirements-level }} setup.py > .${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('.${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt') }}

      - name: Install dependencies
        run: |
          pip install -r .${{ matrix.requirements-level }}-${{ matrix.python-version }}-requirements.txt
          pip install ".[$EXTRAS]"
          pip freeze
          docker --version
          docker-compose --version

      - name: Run tests
        run: |
          ./run-tests.sh
{%- endraw %}
